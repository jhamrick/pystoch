#!/usr/bin/python

import pystoch
import os
import re
import datetime
import traceback

def to_seconds(td):
    return (td.microseconds + (td.seconds + td.days * 24 * 3600) * 10**6) \
           / 10.0**6

# get a list of all of the tests
testfiles = [os.path.join("tests", test) for test in os.listdir("tests") \
             if test.endswith(".py")]

# read all of the tests in and stick the code in a dictionary
mytests = {}
for testfile in testfiles:
    back = len(".py")
    name = os.path.basename(testfile)[:-back]
    mytests[name] = testfile

tests.extend(mytests.keys())
print "Tests: %s" % ", ".join(mytests.keys())
print

for testname in mytests:
    print "-----------------------------------------------"
    print "*** Running '%s' test... ***" % testname
    print "-----------------------------------------------"

    test = mytests[testname]

    # test the python code
    before = datetime.datetime.now()
    try:
        execfile(test)
    except:
        traceback.print_exc(limit=5)
        print 'FAILED\n'
        continue
        
    pythonlocals = locals()
    after = datetime.datetime.now()
    pythontime = to_seconds(after-before)
    pythonresult = pythonlocals['result']

    # run the python code as pystoch code
    before = datetime.datetime.now()
    try:
        pystochlocals = pystoch.run(test)
    except:
        traceback.print_exc(limit=5)
        print 'FAILED\n'
        continue
        
    after = datetime.datetime.now()
    pystochtime = to_seconds(after-before)
    pystochresult = pystochlocals['result']

    def indent(src):
        return "\n".join(["\t" + line for line in src.split("\n")])
        
    print "Python Result  : %s" % pythonresult
    print "PyStoch Result : %s" % pystochresult
    print
    print "Python Time    : %s seconds" % pythontime
    print "PyStoch Time   : %s seconds" % pystochtime
    print
        
    if pythonresult != pystochresult:
        print "FAILED"
        failed.append(testname)
    else:
        print "PASSED"
        passed.append(testname)

    print
